{%- from 'hadoop/settings.sls' import hadoop with context %}
{%- from 'hadoop/hdfs/settings.sls' import hdfs with context %}
{%- from 'hadoop/mapred/settings.sls' import mapred with context %}
{%- from 'hadoop/yarn/settings.sls' import yarn with context %}
{%- set dyn_cfg = yarn.get('config_yarn_site', {}) %}
{%- set major = hadoop.major_version|string() -%}<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
{%- if yarn.resourcemanager_hosts|count() > 1 %}

{%- from 'zookeeper/settings.sls' import zk with context %}

    <property>
      <name>yarn.resourcemanager.ha.enabled</name>
      <value>true</value>
    </property>
    
    <property>
      <name>yarn.resourcemanager.cluster-id</name>
      <value>{{yarn.ha_cluster_id}}</value>
    </property>
    
    <property>
      <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>
{%- for i in range(yarn.resourcemanager_hosts|count()) -%}
rm{{loop.index}}{{ '' if loop.last else ',' }}
{%- endfor -%}</value>
    </property>
    
    <property>
      <name>yarn.resourcemanager.zk-address</name>
      <value>{{ zk.connection_string }}</value>
    </property>
    
{% for resourcemanager_host in yarn.resourcemanager_hosts %}

    <property>
        <name>yarn.resourcemanager.scheduler.address.rm{{loop.index}}</name>
        <value>{{ resourcemanager_host }}:{{ yarn.scheduler_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.resource-tracker.address.rm{{loop.index}}</name>
        <value>{{ resourcemanager_host }}:{{ yarn.resourcetracker_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.address.rm{{loop.index}}</name>
        <value>{{ resourcemanager_host }}:{{ yarn.resourcemanager_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.admin.address.rm{{loop.index}}</name>
        <value>{{ resourcemanager_host }}:{{ yarn.resourcemanager_admin_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.webapp.address.rm{{loop.index}}</name>
        <value>{{ resourcemanager_host }}:{{ yarn.resourcemanager_webapp_port }}</value>
    </property>

{%- endfor -%}
    
{%- else -%}

    <property>
        <name>yarn.resourcemanager.scheduler.address</name>
        <value>{{ yarn.resourcemanager_hosts|first() }}:{{ yarn.scheduler_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.resource-tracker.address</name>
        <value>{{ yarn.resourcemanager_hosts|first() }}:{{ yarn.resourcetracker_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.address</name>
        <value>{{ yarn.resourcemanager_hosts|first() }}:{{ yarn.resourcemanager_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.admin.address</name>
        <value>{{ yarn.resourcemanager_hosts|first() }}:{{ yarn.resourcemanager_admin_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.webapp.address</name>
        <value>{{ yarn.resourcemanager_hosts|first() }}:{{ yarn.resourcemanager_webapp_port }}</value>
    </property>

{%- endif -%}
    
    <property>
        <name>yarn.nodemanager.address</name>
        <value>0.0.0.0:{{ yarn.nodemanager_port }}</value>
    </property>

    <property>
        <name>yarn.nodemanager.webapp.address</name>
        <value>0.0.0.0:{{ yarn.nodemanager_webapp_port }}</value>
    </property>

    <property>
        <name>yarn.nodemanager.localizer.address</name>
        <value>0.0.0.0:{{ yarn.nodemanager_localizer_port }}</value>
    </property>

    <property>
        <name>yarn.log.server.url</name>
        <value>http://{{ mapred.jobtracker_host }}:{{ mapred.jobhistory_webapp_port }}/jobhistory/logs/</value>
        <description>URL for job history server</description>
    </property>

    <property>
        <name>yarn.nodemanager.local-dirs</name>
        <value>{{ '/yarn/local,'.join(yarn.local_disks) }}/yarn/local</value>
   </property>

    <property>
        <name>yarn.nodemanager.log-dirs</name>
        <value>{{ yarn.first_local_disk }}/yarn/logs</value>
    </property>

{%- for name, subdict in dyn_cfg.items() %}
    <property>
        <name>{{ name }}</name>
{%- for k,v in subdict.items() %}
        <{{k}}>{{ v }}</{{k}}>
{%- endfor %}
    </property>

{%- endfor %}
</configuration>
